//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_Inserting(global::LightSwitchApplication.ChangeRequest entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_Inserted(global::LightSwitchApplication.ChangeRequest entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_Updating(global::LightSwitchApplication.ChangeRequest entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_Updated(global::LightSwitchApplication.ChangeRequest entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_Deleting(global::LightSwitchApplication.ChangeRequest entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_Deleted(global::LightSwitchApplication.ChangeRequest entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_Validate(global::LightSwitchApplication.ChangeRequest entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChangeRequest, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_Inserting(global::LightSwitchApplication.ChangeRequestStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_Inserted(global::LightSwitchApplication.ChangeRequestStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_Updating(global::LightSwitchApplication.ChangeRequestStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_Updated(global::LightSwitchApplication.ChangeRequestStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_Deleting(global::LightSwitchApplication.ChangeRequestStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_Deleted(global::LightSwitchApplication.ChangeRequestStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_Validate(global::LightSwitchApplication.ChangeRequestStatus entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChangeRequestStatus, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_Inserting(global::LightSwitchApplication.Document entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_Inserted(global::LightSwitchApplication.Document entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_Updating(global::LightSwitchApplication.Document entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_Updated(global::LightSwitchApplication.Document entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_Deleting(global::LightSwitchApplication.Document entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_Deleted(global::LightSwitchApplication.Document entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_Validate(global::LightSwitchApplication.Document entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Document, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentTypes_Inserting(global::LightSwitchApplication.DocumentType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentTypes_Inserted(global::LightSwitchApplication.DocumentType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentTypes_Updating(global::LightSwitchApplication.DocumentType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentTypes_Updated(global::LightSwitchApplication.DocumentType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentTypes_Deleting(global::LightSwitchApplication.DocumentType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentTypes_Deleted(global::LightSwitchApplication.DocumentType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentTypes_Validate(global::LightSwitchApplication.DocumentType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DocumentType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionApprovals_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionApprovals_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionApprovals_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionApprovals_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionApprovals_Inserting(global::LightSwitchApplication.DocumentVersionApproval entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionApprovals_Inserted(global::LightSwitchApplication.DocumentVersionApproval entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionApprovals_Updating(global::LightSwitchApplication.DocumentVersionApproval entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionApprovals_Updated(global::LightSwitchApplication.DocumentVersionApproval entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionApprovals_Deleting(global::LightSwitchApplication.DocumentVersionApproval entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionApprovals_Deleted(global::LightSwitchApplication.DocumentVersionApproval entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionApprovals_Validate(global::LightSwitchApplication.DocumentVersionApproval entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionApprovals_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DocumentVersionApproval, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionHolders_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionHolders_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionHolders_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionHolders_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionHolders_Inserting(global::LightSwitchApplication.DocumentVersionHolder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionHolders_Inserted(global::LightSwitchApplication.DocumentVersionHolder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionHolders_Updating(global::LightSwitchApplication.DocumentVersionHolder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionHolders_Updated(global::LightSwitchApplication.DocumentVersionHolder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionHolders_Deleting(global::LightSwitchApplication.DocumentVersionHolder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionHolders_Deleted(global::LightSwitchApplication.DocumentVersionHolder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionHolders_Validate(global::LightSwitchApplication.DocumentVersionHolder entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionHolders_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DocumentVersionHolder, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionReviews_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionReviews_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionReviews_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionReviews_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionReviews_Inserting(global::LightSwitchApplication.DocumentVersionReview entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionReviews_Inserted(global::LightSwitchApplication.DocumentVersionReview entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionReviews_Updating(global::LightSwitchApplication.DocumentVersionReview entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionReviews_Updated(global::LightSwitchApplication.DocumentVersionReview entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionReviews_Deleting(global::LightSwitchApplication.DocumentVersionReview entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionReviews_Deleted(global::LightSwitchApplication.DocumentVersionReview entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionReviews_Validate(global::LightSwitchApplication.DocumentVersionReview entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersionReviews_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DocumentVersionReview, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersions_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersions_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersions_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersions_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersions_Inserting(global::LightSwitchApplication.DocumentVersion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersions_Inserted(global::LightSwitchApplication.DocumentVersion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersions_Updating(global::LightSwitchApplication.DocumentVersion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersions_Updated(global::LightSwitchApplication.DocumentVersion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersions_Deleting(global::LightSwitchApplication.DocumentVersion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersions_Deleted(global::LightSwitchApplication.DocumentVersion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersions_Validate(global::LightSwitchApplication.DocumentVersion entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentVersions_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DocumentVersion, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserting(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserted(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updating(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updated(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleting(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleted(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::LightSwitchApplication.Employee entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyOwnedDocuments_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyOwnedDocuments_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyOwnedDocuments_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Document> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyOwnedDocuments_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Document> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyOwnedDocuments_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyDocumentVersionApprovals_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyDocumentVersionApprovals_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyDocumentVersionApprovals_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.DocumentVersionApproval> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyDocumentVersionApprovals_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DocumentVersionApproval> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyDocumentVersionApprovals_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyHeldDocumentVersions_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyHeldDocumentVersions_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyHeldDocumentVersions_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.DocumentVersionHolder> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyHeldDocumentVersions_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DocumentVersionHolder> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyHeldDocumentVersions_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyDocumentReviews_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyDocumentReviews_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyDocumentReviews_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.DocumentVersionReview> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyDocumentReviews_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DocumentVersionReview> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyDocumentReviews_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyAuthoredDocumentVersions_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyAuthoredDocumentVersions_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyAuthoredDocumentVersions_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.DocumentVersion> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyAuthoredDocumentVersions_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DocumentVersion> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyAuthoredDocumentVersions_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChangeRequest>
                __ChangeRequestsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChangeRequest>(
                    "ChangeRequests",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_Filter);
            private static bool __ChangeRequests_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeRequests_CanInsert(ref result);
                return result;
            }
            private static bool __ChangeRequests_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeRequests_CanUpdate(ref result);
                return result;
            }
            private static bool __ChangeRequests_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeRequests_CanDelete(ref result);
                return result;
            }
            private static bool __ChangeRequests_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeRequests_CanRead(ref result);
                return result;
            }
            private static void __ChangeRequests_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequest e)
            {
                d.ChangeRequests_Inserting(e);
            }
            private static void __ChangeRequests_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequest e)
            {
                d.ChangeRequests_Inserted(e);
            }
            private static void __ChangeRequests_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequest e)
            {
                d.ChangeRequests_Updating(e);
            }
            private static void __ChangeRequests_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequest e)
            {
                d.ChangeRequests_Updated(e);
            }
            private static void __ChangeRequests_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequest e)
            {
                d.ChangeRequests_Deleting(e);
            }
            private static void __ChangeRequests_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequest e)
            {
                d.ChangeRequests_Deleted(e);
            }
            private static void __ChangeRequests_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequest e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ChangeRequests_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChangeRequest, bool>> __ChangeRequests_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChangeRequest, bool>> filter = null;
                d.ChangeRequests_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChangeRequestStatus>
                __ChangeRequestStatusesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChangeRequestStatus>(
                    "ChangeRequestStatuses",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_Filter);
            private static bool __ChangeRequestStatuses_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeRequestStatuses_CanInsert(ref result);
                return result;
            }
            private static bool __ChangeRequestStatuses_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeRequestStatuses_CanUpdate(ref result);
                return result;
            }
            private static bool __ChangeRequestStatuses_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeRequestStatuses_CanDelete(ref result);
                return result;
            }
            private static bool __ChangeRequestStatuses_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeRequestStatuses_CanRead(ref result);
                return result;
            }
            private static void __ChangeRequestStatuses_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequestStatus e)
            {
                d.ChangeRequestStatuses_Inserting(e);
            }
            private static void __ChangeRequestStatuses_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequestStatus e)
            {
                d.ChangeRequestStatuses_Inserted(e);
            }
            private static void __ChangeRequestStatuses_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequestStatus e)
            {
                d.ChangeRequestStatuses_Updating(e);
            }
            private static void __ChangeRequestStatuses_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequestStatus e)
            {
                d.ChangeRequestStatuses_Updated(e);
            }
            private static void __ChangeRequestStatuses_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequestStatus e)
            {
                d.ChangeRequestStatuses_Deleting(e);
            }
            private static void __ChangeRequestStatuses_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequestStatus e)
            {
                d.ChangeRequestStatuses_Deleted(e);
            }
            private static void __ChangeRequestStatuses_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequestStatus e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ChangeRequestStatuses_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChangeRequestStatus, bool>> __ChangeRequestStatuses_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChangeRequestStatus, bool>> filter = null;
                d.ChangeRequestStatuses_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Document>
                __DocumentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Document>(
                    "Documents",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Documents_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Documents_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Documents_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Documents_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Documents_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Documents_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Documents_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Documents_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Documents_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Documents_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Documents_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Documents_Filter);
            private static bool __Documents_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Documents_CanInsert(ref result);
                return result;
            }
            private static bool __Documents_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Documents_CanUpdate(ref result);
                return result;
            }
            private static bool __Documents_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Documents_CanDelete(ref result);
                return result;
            }
            private static bool __Documents_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Documents_CanRead(ref result);
                return result;
            }
            private static void __Documents_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Document e)
            {
                d.Documents_Inserting(e);
            }
            private static void __Documents_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Document e)
            {
                d.Documents_Inserted(e);
            }
            private static void __Documents_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Document e)
            {
                d.Documents_Updating(e);
            }
            private static void __Documents_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Document e)
            {
                d.Documents_Updated(e);
            }
            private static void __Documents_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Document e)
            {
                d.Documents_Deleting(e);
            }
            private static void __Documents_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Document e)
            {
                d.Documents_Deleted(e);
            }
            private static void __Documents_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Document e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Documents_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Document, bool>> __Documents_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Document, bool>> filter = null;
                d.Documents_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.DocumentType>
                __DocumentTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.DocumentType>(
                    "DocumentTypes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentTypes_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentTypes_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentTypes_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentTypes_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentTypes_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentTypes_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentTypes_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentTypes_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentTypes_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentTypes_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentTypes_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentTypes_Filter);
            private static bool __DocumentTypes_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentTypes_CanInsert(ref result);
                return result;
            }
            private static bool __DocumentTypes_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __DocumentTypes_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentTypes_CanDelete(ref result);
                return result;
            }
            private static bool __DocumentTypes_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentTypes_CanRead(ref result);
                return result;
            }
            private static void __DocumentTypes_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentType e)
            {
                d.DocumentTypes_Inserting(e);
            }
            private static void __DocumentTypes_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentType e)
            {
                d.DocumentTypes_Inserted(e);
            }
            private static void __DocumentTypes_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentType e)
            {
                d.DocumentTypes_Updating(e);
            }
            private static void __DocumentTypes_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentType e)
            {
                d.DocumentTypes_Updated(e);
            }
            private static void __DocumentTypes_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentType e)
            {
                d.DocumentTypes_Deleting(e);
            }
            private static void __DocumentTypes_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentType e)
            {
                d.DocumentTypes_Deleted(e);
            }
            private static void __DocumentTypes_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.DocumentTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DocumentType, bool>> __DocumentTypes_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DocumentType, bool>> filter = null;
                d.DocumentTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.DocumentVersionApproval>
                __DocumentVersionApprovalsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.DocumentVersionApproval>(
                    "DocumentVersionApprovals",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionApprovals_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionApprovals_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionApprovals_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionApprovals_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionApprovals_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionApprovals_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionApprovals_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionApprovals_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionApprovals_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionApprovals_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionApprovals_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionApprovals_Filter);
            private static bool __DocumentVersionApprovals_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentVersionApprovals_CanInsert(ref result);
                return result;
            }
            private static bool __DocumentVersionApprovals_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentVersionApprovals_CanUpdate(ref result);
                return result;
            }
            private static bool __DocumentVersionApprovals_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentVersionApprovals_CanDelete(ref result);
                return result;
            }
            private static bool __DocumentVersionApprovals_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentVersionApprovals_CanRead(ref result);
                return result;
            }
            private static void __DocumentVersionApprovals_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionApproval e)
            {
                d.DocumentVersionApprovals_Inserting(e);
            }
            private static void __DocumentVersionApprovals_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionApproval e)
            {
                d.DocumentVersionApprovals_Inserted(e);
            }
            private static void __DocumentVersionApprovals_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionApproval e)
            {
                d.DocumentVersionApprovals_Updating(e);
            }
            private static void __DocumentVersionApprovals_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionApproval e)
            {
                d.DocumentVersionApprovals_Updated(e);
            }
            private static void __DocumentVersionApprovals_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionApproval e)
            {
                d.DocumentVersionApprovals_Deleting(e);
            }
            private static void __DocumentVersionApprovals_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionApproval e)
            {
                d.DocumentVersionApprovals_Deleted(e);
            }
            private static void __DocumentVersionApprovals_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionApproval e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.DocumentVersionApprovals_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DocumentVersionApproval, bool>> __DocumentVersionApprovals_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DocumentVersionApproval, bool>> filter = null;
                d.DocumentVersionApprovals_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.DocumentVersionHolder>
                __DocumentVersionHoldersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.DocumentVersionHolder>(
                    "DocumentVersionHolders",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionHolders_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionHolders_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionHolders_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionHolders_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionHolders_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionHolders_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionHolders_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionHolders_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionHolders_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionHolders_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionHolders_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionHolders_Filter);
            private static bool __DocumentVersionHolders_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentVersionHolders_CanInsert(ref result);
                return result;
            }
            private static bool __DocumentVersionHolders_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentVersionHolders_CanUpdate(ref result);
                return result;
            }
            private static bool __DocumentVersionHolders_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentVersionHolders_CanDelete(ref result);
                return result;
            }
            private static bool __DocumentVersionHolders_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentVersionHolders_CanRead(ref result);
                return result;
            }
            private static void __DocumentVersionHolders_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionHolder e)
            {
                d.DocumentVersionHolders_Inserting(e);
            }
            private static void __DocumentVersionHolders_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionHolder e)
            {
                d.DocumentVersionHolders_Inserted(e);
            }
            private static void __DocumentVersionHolders_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionHolder e)
            {
                d.DocumentVersionHolders_Updating(e);
            }
            private static void __DocumentVersionHolders_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionHolder e)
            {
                d.DocumentVersionHolders_Updated(e);
            }
            private static void __DocumentVersionHolders_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionHolder e)
            {
                d.DocumentVersionHolders_Deleting(e);
            }
            private static void __DocumentVersionHolders_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionHolder e)
            {
                d.DocumentVersionHolders_Deleted(e);
            }
            private static void __DocumentVersionHolders_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionHolder e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.DocumentVersionHolders_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DocumentVersionHolder, bool>> __DocumentVersionHolders_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DocumentVersionHolder, bool>> filter = null;
                d.DocumentVersionHolders_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.DocumentVersionReview>
                __DocumentVersionReviewsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.DocumentVersionReview>(
                    "DocumentVersionReviews",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionReviews_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionReviews_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionReviews_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionReviews_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionReviews_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionReviews_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionReviews_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionReviews_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionReviews_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionReviews_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionReviews_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersionReviews_Filter);
            private static bool __DocumentVersionReviews_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentVersionReviews_CanInsert(ref result);
                return result;
            }
            private static bool __DocumentVersionReviews_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentVersionReviews_CanUpdate(ref result);
                return result;
            }
            private static bool __DocumentVersionReviews_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentVersionReviews_CanDelete(ref result);
                return result;
            }
            private static bool __DocumentVersionReviews_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentVersionReviews_CanRead(ref result);
                return result;
            }
            private static void __DocumentVersionReviews_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionReview e)
            {
                d.DocumentVersionReviews_Inserting(e);
            }
            private static void __DocumentVersionReviews_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionReview e)
            {
                d.DocumentVersionReviews_Inserted(e);
            }
            private static void __DocumentVersionReviews_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionReview e)
            {
                d.DocumentVersionReviews_Updating(e);
            }
            private static void __DocumentVersionReviews_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionReview e)
            {
                d.DocumentVersionReviews_Updated(e);
            }
            private static void __DocumentVersionReviews_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionReview e)
            {
                d.DocumentVersionReviews_Deleting(e);
            }
            private static void __DocumentVersionReviews_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionReview e)
            {
                d.DocumentVersionReviews_Deleted(e);
            }
            private static void __DocumentVersionReviews_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersionReview e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.DocumentVersionReviews_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DocumentVersionReview, bool>> __DocumentVersionReviews_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DocumentVersionReview, bool>> filter = null;
                d.DocumentVersionReviews_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.DocumentVersion>
                __DocumentVersionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.DocumentVersion>(
                    "DocumentVersions",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersions_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersions_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersions_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersions_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersions_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersions_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersions_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersions_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersions_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersions_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersions_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DocumentVersions_Filter);
            private static bool __DocumentVersions_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentVersions_CanInsert(ref result);
                return result;
            }
            private static bool __DocumentVersions_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentVersions_CanUpdate(ref result);
                return result;
            }
            private static bool __DocumentVersions_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentVersions_CanDelete(ref result);
                return result;
            }
            private static bool __DocumentVersions_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.DocumentVersions_CanRead(ref result);
                return result;
            }
            private static void __DocumentVersions_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersion e)
            {
                d.DocumentVersions_Inserting(e);
            }
            private static void __DocumentVersions_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersion e)
            {
                d.DocumentVersions_Inserted(e);
            }
            private static void __DocumentVersions_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersion e)
            {
                d.DocumentVersions_Updating(e);
            }
            private static void __DocumentVersions_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersion e)
            {
                d.DocumentVersions_Updated(e);
            }
            private static void __DocumentVersions_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersion e)
            {
                d.DocumentVersions_Deleting(e);
            }
            private static void __DocumentVersions_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersion e)
            {
                d.DocumentVersions_Deleted(e);
            }
            private static void __DocumentVersions_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.DocumentVersion e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.DocumentVersions_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DocumentVersion, bool>> __DocumentVersions_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DocumentVersion, bool>> filter = null;
                d.DocumentVersions_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>
                __EmployeesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>(
                    "Employees",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Filter);
            private static bool __Employees_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanInsert(ref result);
                return result;
            }
            private static bool __Employees_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanUpdate(ref result);
                return result;
            }
            private static bool __Employees_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanDelete(ref result);
                return result;
            }
            private static bool __Employees_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanRead(ref result);
                return result;
            }
            private static void __Employees_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Inserting(e);
            }
            private static void __Employees_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Inserted(e);
            }
            private static void __Employees_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Updating(e);
            }
            private static void __Employees_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Updated(e);
            }
            private static void __Employees_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Deleting(e);
            }
            private static void __Employees_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Deleted(e);
            }
            private static void __Employees_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Employees_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> __Employees_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> filter = null;
                d.Employees_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Document>
                __MyOwnedDocumentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Document>(
                    "MyOwnedDocuments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyOwnedDocuments_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyOwnedDocuments_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyOwnedDocuments_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyOwnedDocuments_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyOwnedDocuments_PreprocessQuery);
            private static bool __MyOwnedDocuments_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MyOwnedDocuments_CanExecute(ref r);
                return r;
            }
            private static void __MyOwnedDocuments_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyOwnedDocuments_Executing();
            }
            private static void __MyOwnedDocuments_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyOwnedDocuments_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Document>)args[0]);
            }
            private static void __MyOwnedDocuments_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MyOwnedDocuments_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __MyOwnedDocuments_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Document> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Document>)args[0];
                d.MyOwnedDocuments_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.DocumentVersionApproval>
                __MyDocumentVersionApprovalsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.DocumentVersionApproval>(
                    "MyDocumentVersionApprovals",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyDocumentVersionApprovals_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyDocumentVersionApprovals_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyDocumentVersionApprovals_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyDocumentVersionApprovals_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyDocumentVersionApprovals_PreprocessQuery);
            private static bool __MyDocumentVersionApprovals_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MyDocumentVersionApprovals_CanExecute(ref r);
                return r;
            }
            private static void __MyDocumentVersionApprovals_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyDocumentVersionApprovals_Executing();
            }
            private static void __MyDocumentVersionApprovals_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyDocumentVersionApprovals_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DocumentVersionApproval>)args[0]);
            }
            private static void __MyDocumentVersionApprovals_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MyDocumentVersionApprovals_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __MyDocumentVersionApprovals_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.DocumentVersionApproval> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.DocumentVersionApproval>)args[0];
                d.MyDocumentVersionApprovals_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.DocumentVersionHolder>
                __MyHeldDocumentVersionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.DocumentVersionHolder>(
                    "MyHeldDocumentVersions",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyHeldDocumentVersions_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyHeldDocumentVersions_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyHeldDocumentVersions_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyHeldDocumentVersions_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyHeldDocumentVersions_PreprocessQuery);
            private static bool __MyHeldDocumentVersions_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MyHeldDocumentVersions_CanExecute(ref r);
                return r;
            }
            private static void __MyHeldDocumentVersions_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyHeldDocumentVersions_Executing();
            }
            private static void __MyHeldDocumentVersions_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyHeldDocumentVersions_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DocumentVersionHolder>)args[0]);
            }
            private static void __MyHeldDocumentVersions_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MyHeldDocumentVersions_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __MyHeldDocumentVersions_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.DocumentVersionHolder> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.DocumentVersionHolder>)args[0];
                d.MyHeldDocumentVersions_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.DocumentVersionReview>
                __MyDocumentReviewsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.DocumentVersionReview>(
                    "MyDocumentReviews",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyDocumentReviews_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyDocumentReviews_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyDocumentReviews_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyDocumentReviews_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyDocumentReviews_PreprocessQuery);
            private static bool __MyDocumentReviews_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MyDocumentReviews_CanExecute(ref r);
                return r;
            }
            private static void __MyDocumentReviews_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyDocumentReviews_Executing();
            }
            private static void __MyDocumentReviews_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyDocumentReviews_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DocumentVersionReview>)args[0]);
            }
            private static void __MyDocumentReviews_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MyDocumentReviews_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __MyDocumentReviews_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.DocumentVersionReview> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.DocumentVersionReview>)args[0];
                d.MyDocumentReviews_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.DocumentVersion>
                __MyAuthoredDocumentVersionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.DocumentVersion>(
                    "MyAuthoredDocumentVersions",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAuthoredDocumentVersions_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAuthoredDocumentVersions_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAuthoredDocumentVersions_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAuthoredDocumentVersions_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAuthoredDocumentVersions_PreprocessQuery);
            private static bool __MyAuthoredDocumentVersions_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MyAuthoredDocumentVersions_CanExecute(ref r);
                return r;
            }
            private static void __MyAuthoredDocumentVersions_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyAuthoredDocumentVersions_Executing();
            }
            private static void __MyAuthoredDocumentVersions_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyAuthoredDocumentVersions_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DocumentVersion>)args[0]);
            }
            private static void __MyAuthoredDocumentVersions_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MyAuthoredDocumentVersions_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __MyAuthoredDocumentVersions_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.DocumentVersion> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.DocumentVersion>)args[0];
                d.MyAuthoredDocumentVersions_PreprocessQuery(ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
